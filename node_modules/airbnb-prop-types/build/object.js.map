{"version":3,"sources":["../src/object.js"],"names":["ReactPropTypeLocationNames","prop","context","childContext","object","props","propName","componentName","location","propFullName","propValue","locationName","TypeError","isRequired","objectRequired","rest"],"mappings":";;;;AAAA;;;;AACA;;;;AACA;;;;;;AAEA;;;;;AAKA,IAAMA,6BAA6B;AACjCC,QAAM,MAD2B;AAEjCC,WAAS,SAFwB;AAGjCC,gBAAc;AAHmB,CAAnC;;AAMA,SAASC,MAAT,CAAgBC,KAAhB,EAAuBC,QAAvB,EAAiCC,aAAjC,EAAgDC,QAAhD,EAA0DC,YAA1D,EAAwE;AACtE,MAAMC,YAAYL,MAAMC,QAAN,CAAlB;AACA,MAAII,aAAa,IAAjB,EAAuB;AACrB,WAAO,IAAP;AACD;;AAED,MAAI,gCAAcA,SAAd,CAAJ,EAA8B;AAC5B,WAAO,IAAP;AACD;AACD,MAAMC,eAAeX,2BAA2BQ,QAA3B,KAAwCA,QAA7D;AACA,SAAO,IAAII,SAAJ,qBAAyBD,YAAzB,kBAA2CF,YAA3C,2BAAuE,yBAAOC,SAAP,CAAvE,+BAA4GH,aAA5G,4BAAP;AACD;AACDH,OAAOS,UAAP;AAAoB,WAASC,cAAT,CAClBT,KADkB,EAElBC,QAFkB,EAGlBC,aAHkB,EAIlBC,QAJkB,EAKlBC,YALkB,EAOlB;AACA,QAAMC,YAAYL,MAAMC,QAAN,CAAlB;AACA,QAAII,aAAa,IAAjB,EAAuB;AACrB,UAAMC,eAAeX,2BAA2BQ,QAA3B,KAAwCA,QAA7D;AACA,aAAO,IAAII,SAAJ,iBAAqBD,YAArB,kBAAuCF,YAAvC,4CAAoFF,aAApF,qCAA2HG,SAA3H,SAAP;AACD;;AALD,sCADGK,IACH;AADGA,UACH;AAAA;;AAMA,WAAOX,yBAAOC,KAAP,EAAcC,QAAd,EAAwBC,aAAxB,EAAuCC,QAAvC,EAAiDC,YAAjD,SAAkEM,IAAlE,EAAP;AACD;;AAdD,SAA6BD,cAA7B;AAAA;;qBAgBe;AAAA,SAAM,gCAAcV,MAAd,EAAsB,QAAtB,CAAN;AAAA,C","file":"object.js","sourcesContent":["import isPlainObject from './helpers/isPlainObject';\nimport typeOf from './helpers/typeOf';\nimport wrapValidator from './helpers/wrapValidator';\n\n/*\n  code adapted from https://github.com/facebook/react/blob/14156e56b9cf18ac86963185c5af4abddf3ff811/src/isomorphic/classic/types/ReactPropTypes.js#L202-L206\n  so that it can be called outside of React's normal PropType flow\n*/\n\nconst ReactPropTypeLocationNames = {\n  prop: 'prop',\n  context: 'context',\n  childContext: 'child context',\n};\n\nfunction object(props, propName, componentName, location, propFullName) {\n  const propValue = props[propName];\n  if (propValue == null) {\n    return null;\n  }\n\n  if (isPlainObject(propValue)) {\n    return null;\n  }\n  const locationName = ReactPropTypeLocationNames[location] || location;\n  return new TypeError(`Invalid ${locationName} \\`${propFullName}\\` of type \\`${typeOf(propValue)}\\` supplied to \\`${componentName}\\`, expected \\`object\\`.`);\n}\nobject.isRequired = function objectRequired(\n  props,\n  propName,\n  componentName,\n  location,\n  propFullName,\n  ...rest\n) {\n  const propValue = props[propName];\n  if (propValue == null) {\n    const locationName = ReactPropTypeLocationNames[location] || location;\n    return new TypeError(`The ${locationName} \\`${propFullName}\\` is marked as required in \\`${componentName}\\`, but its value is \\`${propValue}\\`.`);\n  }\n  return object(props, propName, componentName, location, propFullName, ...rest);\n};\n\nexport default () => wrapValidator(object, 'object');\n"]}