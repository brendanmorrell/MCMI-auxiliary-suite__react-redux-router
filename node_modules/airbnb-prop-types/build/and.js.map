{"version":3,"sources":["../src/and.js"],"names":["andValidator","validators","name","Array","isArray","TypeError","length","RangeError","validator","and","args","firstError","some","validatorFn","isRequired","andIsRequired"],"mappings":";;;qBAEwBA,Y;;AAFxB;;;;;;AAEe,SAASA,YAAT,CAAsBC,UAAtB,EAAgD;AAAA,MAAdC,IAAc,uEAAP,KAAO;;AAC7D,MAAI,CAACC,MAAMC,OAAN,CAAcH,UAAd,CAAL,EAAgC;AAC9B,UAAM,IAAII,SAAJ,CAAc,wCAAd,CAAN;AACD;AACD,MAAIJ,WAAWK,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,UAAM,IAAIC,UAAJ,CAAe,wCAAf,CAAN;AACD;;AAED,MAAMC;AAAY,aAASC,GAAT,GAAsB;AAAA,wCAANC,IAAM;AAANA,YAAM;AAAA;;AACtC,UAAIC,aAAa,IAAjB;AACAV,iBAAWW,IAAX,CAAgB,UAACC,WAAD,EAAiB;AAC/BF,qBAAaE,6BAAeH,IAAf,CAAb;AACA,eAAOC,cAAc,IAArB;AACD,OAHD;AAIA,aAAOA,cAAc,IAAd,GAAqB,IAArB,GAA4BA,UAAnC;AACD;;AAPK,WAAqBF,GAArB;AAAA,KAAN;;AASAD,YAAUM,UAAV;AAAuB,aAASC,aAAT,GAAgC;AAAA,yCAANL,IAAM;AAANA,YAAM;AAAA;;AACrD,UAAIC,aAAa,IAAjB;AACAV,iBAAWW,IAAX,CAAgB,UAACC,WAAD,EAAiB;AAC/BF,qBAAaE,YAAYC,UAAZ,oBAA0BJ,IAA1B,CAAb;AACA,eAAOC,cAAc,IAArB;AACD,OAHD;AAIA,aAAOA,cAAc,IAAd,GAAqB,IAArB,GAA4BA,UAAnC;AACD;;AAPD,WAAgCI,aAAhC;AAAA;;AASA,SAAO,gCAAcP,SAAd,EAAyBN,IAAzB,EAA+BD,UAA/B,CAAP;AACD","file":"and.js","sourcesContent":["import wrapValidator from './helpers/wrapValidator';\n\nexport default function andValidator(validators, name = 'and') {\n  if (!Array.isArray(validators)) {\n    throw new TypeError('and: 2 or more validators are required');\n  }\n  if (validators.length <= 1) {\n    throw new RangeError('and: 2 or more validators are required');\n  }\n\n  const validator = function and(...args) {\n    let firstError = null;\n    validators.some((validatorFn) => {\n      firstError = validatorFn(...args);\n      return firstError != null;\n    });\n    return firstError == null ? null : firstError;\n  };\n\n  validator.isRequired = function andIsRequired(...args) {\n    let firstError = null;\n    validators.some((validatorFn) => {\n      firstError = validatorFn.isRequired(...args);\n      return firstError != null;\n    });\n    return firstError == null ? null : firstError;\n  };\n\n  return wrapValidator(validator, name, validators);\n}\n"]}