{"version":3,"sources":["../src/range.js"],"names":["range","MAX_SAFE_INTEGER","Number","isValidLength","x","Math","abs","min","max","RangeError","gte","lt"],"mappings":";;;qBAYwBA,K;;AAZxB;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMC,mBAAmBC,OAAOD,gBAAP,IAA2B,0BAA2B,SAAC,CAAD,EAAM,EAAN,IAAY,CAA3F;;AAEA,SAASE,aAAT,CAAuBC,CAAvB,EAA0B;AACxB,SAAO,4BAAUA,CAAV,KAAgBC,KAAKC,GAAL,CAASF,CAAT,IAAcH,gBAArC;AACD;;AAEc,SAASD,KAAT,CAAeO,GAAf,EAAoBC,GAApB,EAAyB;AACtC,MAAI,CAACL,cAAcI,GAAd,CAAD,IAAuB,CAACJ,cAAcK,GAAd,CAA5B,EAAgD;AAC9C,UAAM,IAAIC,UAAJ,4CAAiDF,GAAjD,qBAA4DC,GAA5D,aAAN;AACD;AACD,MAAID,QAAQC,GAAZ,EAAiB;AACf,UAAM,IAAIC,UAAJ,CAAe,kCAAf,CAAN;AACD;AACD,SAAO,gCAAc,sBAAI,CAAC,2BAAD,EAAY,0BAAQ,EAAEC,KAAKH,GAAP,EAAYI,IAAIH,GAAhB,EAAR,CAAZ,CAAJ,EAAiD,OAAjD,CAAd,EAAyE,OAAzE,EAAkF,EAAED,QAAF,EAAOC,QAAP,EAAlF,CAAP;AACD","file":"range.js","sourcesContent":["import and from './and';\nimport between from './between';\nimport integer from './integer';\nimport isInteger from './helpers/isInteger';\nimport wrapValidator from './helpers/wrapValidator';\n\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || /* istanbul ignore next */ (2 ** 53) - 1;\n\nfunction isValidLength(x) {\n  return isInteger(x) && Math.abs(x) < MAX_SAFE_INTEGER;\n}\n\nexport default function range(min, max) {\n  if (!isValidLength(min) || !isValidLength(max)) {\n    throw new RangeError(`\"range\" requires two integers: ${min} and ${max} given`);\n  }\n  if (min === max) {\n    throw new RangeError('min and max must not be the same');\n  }\n  return wrapValidator(and([integer(), between({ gte: min, lt: max })], 'range'), 'range', { min, max });\n}\n"]}